
version: 0.0.12
title: Apache Tomcat
description: Log parser for Apache Tomcat
min_stanza_version: 0.13.12
supported_platforms:
  - linux
  - windows
  - macos
  - kubernetes
parameters:
  - name: source
    label: Log source
    description: Use this field to specify where your logs are coming from. When choosing the 'file' option, the agent reads in logs from the log paths specified below. When choosing the 'Kubernetes' options, the agent reads logs from /var/log/containers based on the Pod and Container specified below.
    type: enum
    valid_values:
      - file
      - kubernetes
    default: file
  - name: log_format
    label: Log Format
    description: When choosing the 'default' option, the agent will expect and parse logs in a format that matches the default logging configuration. When choosing the 'observIQ' option, the agent will expect and parse logs in an optimized JSON format that adheres to the observIQ specification, requiring an update to the server.xml file. See the Apache Tomcat source page for more information.
    type: enum
    valid_values:
      - default
      - observiq
    default: default
  - name: cluster_name
    label: Cluster Name
    description: 'Cluster Name to be added to a resource label'
    type: string
    default: ""
    relevant_if:
      source:
        equals: kubernetes
  - name: pod_name
    label: Pod Name
    description: The pod name (without the unique identifier on the end)
    type: string
    default: 'tomcat-*'
    required: false
    relevant_if:
      source:
        equals: kubernetes
  - name: container_name
    label: Container Name
    description: The container name of the Nginx container
    type: string
    default: "*"
    relevant_if:
      source:
        equals: kubernetes
  - name: enable_access_log
    label: Access Logs
    description: Enable to collect Apache Tomcat access logs
    type: bool
    default: true
  - name: access_log_path
    label: Access Log Path
    description: Path to access log file
    type: string
    default: "/usr/local/tomcat/logs/localhost_access_log.*.txt"
    relevant_if:
      source:
        equals: file
      enable_access_log:
        equals: true
  - name: enable_catalina_log
    label: Catalina Logs
    description: Enable to collect Apache Tomcat catalina logs
    type: bool
    default: true
  - name: catalina_log_path
    label: Catalina Log Path
    description: Path to catalina log file
    type: string
    default: "/usr/local/tomcat/logs/catalina.out"
    relevant_if:
      source:
        equals: file
      enable_catalina_log:
        equals: true
  - name: start_at
    label: Start At
    description: Start reading file from 'beginning' or 'end'
    type: enum
    valid_values:
     - beginning
     - end
    default: end
# Set Defaults
# {{$source := default "file" .source}}
# {{$log_format := default "default" .log_format}}
# {{$cluster_name := default "" .cluster_name}}
# {{$pod_name := default "tomcat-*" .pod_name}}
# {{$container_name := default "*" .container_name}}
# {{$enable_access_log := default true .enable_access_log}}
# {{$access_log_path := default "/usr/local/tomcat/logs/localhost_access_log.*.txt" .access_log_path}}
# {{$enable_catalina_log := default true .enable_catalina_log}}
# {{$catalina_log_path := default "/usr/local/tomcat/logs/catalina.out" .catalina_log_path}}
# {{$start_at := default "end" .start_at}}

# Pipeline Template
pipeline:
  # {{ if eq $source "kubernetes" }}
  - id: kubernetes_input
    type: kubernetes_container
    pod_name: '{{ $pod_name }}'
    container_name: '{{ $container_name }}'
    cluster_name: '{{ $cluster_name }}'
    start_at: '{{ $start_at }}'
    enable_nested_json_parser: false

  - id: k8s_input_router
    type: router
    routes:
      # {{ if $enable_access_log }}
      - expr: "$labels.stream == 'stdout'"
        output: '{{ if eq $log_format "default" }}access_regex_parser{{ else if eq $log_format "observiq" }}access_json_parser{{ end }}'
        labels:
          log_type: 'tomcat.access'
          plugin_id: '{{ .id }}'
      # {{ end }}
      # {{ if $enable_catalina_log }}
      - expr: '$labels.stream == "stderr" and $record matches  "^[0-9]{2}-[A-Za-z]{3}-[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}"'
        output: catalina_regex_parser
        labels:
          log_type: 'tomcat.catalina'
          plugin_id: '{{ .id }}'
      # {{ end }}
  # {{ end }}
  #{{ if and $enable_access_log (eq $source "file") }}
  - id: tomcat_access_reader
    type: file_input
    include:
      - {{ $access_log_path }}
    start_at: {{ $start_at }}
    labels:
      log_type: 'tomcat.access'
      plugin_id: {{ .id }}
    output: '{{ if eq $log_format "default" }}access_regex_parser{{ else if eq $log_format "observiq" }}access_json_parser{{ end }}'
  # {{ end }}

  # {{ if $enable_access_log }}
    # {{ if eq $log_format "default" }}
  - id: access_regex_parser
    type: regex_parser
    regex: '(?P<remote_host>[^\s]+) - (?P<remote_user>[^\s]+) \[(?P<timestamp>[^\]]+)\] "(?P<method>[A-Z]+) (?P<path>[^\s]+)[^"]+" (?P<status>\d+) (?P<bytes_sent>[^\s]+)'
    timestamp:
      parse_from: timestamp
      layout: '%d/%b/%Y:%H:%M:%S %z'
    severity:
      parse_from: status
      preserve_to: status
      mapping:
        info: 2xx
        notice: 3xx
        warning: 4xx
        error: 5xx
    output: {{ .output }}
    # {{ end }}
    # {{ if eq $log_format "observiq" }}
  - id: access_json_parser
    type: json_parser
    timestamp:
      parse_from: timestamp
      layout: '[%d/%h/%Y:%H:%M:%S %z]'
    severity:
      parse_from: status
      preset: none
      preserve_to: status
      mapping:
        info: 2xx
        notice: 3xx
        warning: 4xx
        error: 5xx
    output: access_protocol_parser

  - id: access_protocol_parser
    type: regex_parser
    parse_from: $record.protocol
    regex: '(?P<protocol>[^/]*)/(?P<protocol_version>.*)'
    output: {{ .output }}
    # {{ end }}
  #{{ end }}

  #{{ if and $enable_catalina_log (eq $source "file") }}
  - id: tomcat_catalina_reader
    type: file_input
    include:
      - {{ $catalina_log_path }}
    start_at: {{ $start_at }}
    multiline:
      line_start_pattern: '[0-9]{2}-[A-Za-z]{3}-[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}'
    labels:
      log_type: 'tomcat.catalina'
      plugin_id: {{ .id }}
    output: catalina_regex_parser
  #{{ end }}

  #{{ if $enable_catalina_log }}
  - id: catalina_regex_parser
    type: regex_parser
    regex: '(?P<timestamp>[0-9]{2}-[A-Za-z]{3}-[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3})\s(?P<tomcat_severity>[A-Z]*)\s\[(?P<thread>[\w-]*)\]\s(?P<tc_source>[^ ]*)\s(?P<message>[\s\S]+)'
    timestamp:
      parse_from: timestamp
      layout: '%d-%b-%Y %H:%M:%S.%L'
    severity:
      parse_from: tomcat_severity
      mapping:
        notice: config
        emergency: severe
        debug:
          - fine
          - finer
          - finest
    output: {{ .output }}
  #{{ end }}