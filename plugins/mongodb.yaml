
version: 0.0.11
title: MongoDB
description: Log parser for MongoDB
supported_platforms:
  - linux
  - windows
  - kubernetes
parameters:
  - name: source
    label: Log source
    description: Use this field to specify where your logs are coming from. When choosing the 'file' option, the agent reads in logs from the log paths specified below.  When choosing the 'Kubernetes' options, the agent reads logs from /var/log/containers based on the Pod and Container specified below.
    type: enum
    valid_values:
      - file
      - kubernetes
    default: file
  - name: cluster_name
    label: Cluster Name
    description: 'Cluster Name to be added to a resource label'
    type: string
    default: ""
    relevant_if:
      source:
        equals: kubernetes
  - name: pod_name
    label: Pod Name
    description: The pod name (without the unique identifier on the end)
    type: string
    default: 'mongodb'
    relevant_if:
      source:
        equals: kubernetes
  - name: container_name
    label: Container Name
    description: The container name of the Mongodb container
    type: string
    default: "*"
    relevant_if:
      source:
        equals: kubernetes
  - name: log_path
    label: Path
    description: The path of the log file
    type: string
    default: "/var/log/mongodb/mongodb.log*"
    relevant_if:
      source:
        equals: file
  - name: start_at
    label: Start At
    description: Start reading file from 'beginning' or 'end'
    type: enum
    valid_values:
     - beginning
     - end
    default: end

# Set Defaults
# {{$source := default "file" .source}}
# {{$cluster_name := default "" .cluster_name}}
# {{$pod_name := default "mongodb-*" .pod_name}}
# {{$container_name := default "*" .container_name}}
# {{$log_path := default "/var/log/mongodb/mongod*.log" .log_path}}
# {{$start_at := default "end" .start_at}}

# Pipeline Template
pipeline:
  # {{ if eq $source "kubernetes" }}
  - id: kubernetes_input
    type: kubernetes_container
    pod_name: '{{ $pod_name }}'
    container_name: '{{ $container_name }}'
    cluster_name: '{{ $cluster_name }}'
    start_at: '{{ $start_at }}'
    enable_nested_json_parser: false
    output: input_router
  # {{ end }}


  # {{ if eq $source "file" }}
  - id: file_input
    type: file_input
    include:
      - '{{ $log_path }}'
    exclude:
      - '{{ $log_path }}*.gz'
    start_at: '{{ $start_at }}'
    output: input_router
  # {{ end }}

  - id: input_router
    type: router
    default: legacy_parser
    routes:
      - expr: '$record matches "^{.*}$|^{.*}\\n$"'
        output: 4_4_parser

  - id: legacy_parser
    type: regex_parser
    regex: '^(?P<timestamp>\S+)\s+(?P<severity>\w+)\s+(?P<component>[\w-]+)\s+\[(?P<context>\S+)\]\s+(?P<message>.*)$'
    timestamp:
      parse_from: timestamp
      #2019-02-06T09:22:43.967-0500
      layout: '%Y-%m-%dT%H:%M:%S.%f%z'
    severity:
      parse_from: severity
      mapping:
        critical: F
        error: E
        warning: W
        info: I
        debug:
          - D
          - D1
          - D2
          - D3
          - D4
          - D5
    output: add_plugin_id

  - id: 4_4_parser
    type: json_parser
    parse_from: $record
    timestamp:
      parse_from: $record.t.$date
      #2020-11-03T14:24:07.436-05:00
      layout: '%Y-%m-%dT%H:%M:%S.%f%j'
    severity:
      parse_from: s
      mapping:
        critical: F
        error: E
        warning: W
        info: I
        debug:
          - D
          - D1
          - D2
          - D3
          - D4
          - D5
    output: restructure_log_entry

  - id: restructure_log_entry
    type: restructure
    ops:
      - remove: $record.t
      - move:
          from: '$record.c'
          to: '$record.component'
      - move:
          from: '$record.ctx'
          to: '$record.context'
      - move:
          from: '$record.msg'
          to: '$record.message'
    output: promote_wiredtiger_message

  # When message is 'WiredTiger message', data.attr.message
  # always exists, and should be promoted to message
  - id: promote_wiredtiger_message
    type: restructure
    if: '$record.message == "WiredTiger message"'
    ops:
      - move:
          from: '$record.message'
          to: '$record.message_type'
      - move:
          from: '$record.attr.message'
          to: '$record.message'
    output: add_plugin_id
    
  - id: add_plugin_id
    type: add
    field: '$labels.plugin_id'
    value: {{ .id }}

  - id: add_log_type
    type: add
    field: '$labels.log_type'
    value: 'mongodb'
    output: {{ .output }}