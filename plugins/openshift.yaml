---
version: 0.0.9
title: Openshift
description: Log parser for Openshift
min_stanza_version: 1.1.6
supported_platforms:
  - openshift
parameters:
  - name: journald_log_path
    label: Containers Log Path
    description: The directory where the journald logs are located. Defaults to '/var/log/journal'.
    type: string
    default: "/var/log/journal"
  - name: start_at
    label: Start At
    description: Start reading file from 'beginning' or 'end'. Defaults to 'end'.
    type: enum
    valid_values:
      - beginning
      - end
    default: end
  - name: cluster_name
    label: Cluster Name
    description: 'Cluster Name to be added to a resource label'
    type: string
  - name: enable_container_logs
    label: Enable Container Logs
    description: Enable collection of container logs
    type: bool
    default: true
  - name: enable_docker_logs
    label: Enable Docker Daemon Logs
    description: Enable collection of the Docker Daemon logs
    type: bool
    default: true
  - name: enable_openshift_logs
    label: Enable Openshift logs
    description: Enable collection of Openshift unit logs
    type: bool
    default: true
  - name: enable_metadata
    label: Enable Metadata
    description: Attach metadata to entries https://github.com/observIQ/stanza/blob/main/docs/operators/k8s_metadata_decorator.md
    type: bool
    default: true
  - name: poll_interval
    label: Journald Poll Interval
    description: How often to poll journald.
    type: string
    default: 200ms

# Set Defaults
# {{ $journald_log_path := default "/var/log/journal" .journald_log_path }}
# {{ $enable_container_logs := default true .enable_container_logs }}
# {{ $enable_docker_logs := default true .enable_docker_logs }}
# {{ $enable_openshift_logs := default true .enable_openshift_logs }}
# {{ $enable_metadata := default true .enable_metadata }}
# {{ $cluster_name := default "" .cluster_name }}
# {{ $start_at := default "end" .start_at }}
# {{$poll_interval := default "200ms" .poll_interval}}

pipeline:
  - type: journald_input
    directory: '{{ $journald_log_path }}'
    start_at: '{{ $start_at }}'
    labels:
      plugin_id: '{{ .id }}'
    poll_interval: '{{ $poll_interval }}'

  - type: router
    routes:
      # Ignore logs written by Stanza to avoid circular parsing
      - expr: '$record._COMM == "dockerd-current" and $record.CONTAINER_NAME != nil and $record.CONTAINER_NAME matches "stanza"'
        output: drop_output
      # Ignore logs written by observiq-agent to avoid circular parsing
      - expr: '$record._COMM == "dockerd-current" and $record.CONTAINER_NAME != nil and $record.CONTAINER_NAME matches "observiq-agent"'
        output: drop_output
      # Ignore logs written by bindplane-agent to avoid circular parsing
      - expr: '$record._COMM == "dockerd-current" and $record.CONTAINER_NAME != nil and $record.CONTAINER_NAME matches "bindplane-agent"'
        output: drop_output
      # Send all container logs to the container name parser
      - expr: '$record._COMM == "dockerd-current" and $record.CONTAINER_NAME != nil'
        output: '{{ if $enable_container_logs -}} regex_parser {{- else -}} drop_output {{- end }}'
      # Send all docker logs to the be labeled
      - expr: '$record._COMM == "dockerd-current"'
        output: {{ if $enable_docker_logs -}} {{ .output }} {{- else -}} drop_output {{- end }}
        labels:
          log_type: 'docker'
      # Send all openshift logs to be labeled and parsed
      - expr: '$record._SYSTEMD_UNIT == "atomic-openshift-node.service"'
        output: '{{ if $enable_openshift_logs -}} message_retainer {{- else -}} drop_output {{- end }}'
        labels:
          log_type: 'openshift'

  # Drop unwanted logs
  - type: "drop_output"

  # Parse the container name into service name, pod name, and namespace
  - type: regex_parser
    regex: '^k8s_(?P<service_name>[-a-z0-9_]+)_(?P<pod_name>[-a-z0-9\.]+)_(?P<namespace>[-a-z0-9]+)_[-a-z0-9]+_\d+$'
    parse_from: CONTAINER_NAME
    parse_to: k8s_metadata

  # Move important fields to labels, and drop extraneous fields
  - id: post_parse_restructure
    type: restructure
    ops:
      - move:
    